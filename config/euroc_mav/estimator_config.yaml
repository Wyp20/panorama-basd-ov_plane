%YAML:1.0 # need to specify the file type at the top!

verbosity: "INFO" # ALL, DEBUG, INFO, WARNING, ERROR, SILENT

use_fej: true # if first-estimate Jacobians should be used (enable for good consistency)
use_imuavg: true # if using discrete integration, if we should average sequential IMU measurements to "smooth" it
use_rk4int: true # if rk4 integration should be used (overrides imu averaging)

use_stereo: true # if we have more than 1 camera, if we should try to track stereo constraints between pairs
max_cameras: 1 # how many cameras we have 1 = mono, 2 = stereo, >2 = binocular (all mono tracking)

calib_cam_extrinsics: true # if the transform between camera and IMU should be optimized R_ItoC, p_CinI
calib_cam_intrinsics: true # if camera intrinsics should be optimized (focal, center, distortion)
calib_cam_timeoffset: true # if timeoffset between camera and IMU should be optimized

max_clones: 11 # how many clones in the sliding window
max_slam: 0 # number of features in our state vector
max_slam_in_update: 15 # update can be split into sequential updates of batches, how many in a batch
max_msckf_in_update: 20 # how many MSCKF features to use in the update
dt_slam_delay: 2 # delay before initializing (helps with stability from bad initialization...)

gravity_mag: 9.81 # magnitude of gravity in this location

feat_rep_msckf: "GLOBAL_3D"
feat_rep_slam: "GLOBAL_3D"
feat_rep_aruco: "GLOBAL_3D"

# zero velocity update parameters we can use
# we support either IMU-based or disparity detection.
try_zupt: false
zupt_chi2_multipler: 0 # set to 0 for only disp-based
zupt_max_velocity: 0.1
zupt_noise_multiplier: 50
zupt_max_disparity: 1.5 # set to 0 for only imu-based
zupt_only_at_beginning: true


# ==================================================================
# Plane-related parameters
# ==================================================================

use_plane_constraint: true # use point on plane constraints at all
use_plane_constraint_msckf: true # use point on plane constraints for MSCKF points
use_plane_constraint_slamu: true # use point on plane constraints for SLAM point update
use_plane_constraint_slamd: true # use point on plane constraints for SLAM point delayed initialization

use_plane_slam_feats: true # if we should insert planes into the state as SLAM features
use_refine_plane_feat: true # if 3d feature estimates should be refined to the plane before update
use_groundtruths: false # if groundtruth planes should be used (simulation only)

sigma_constraint: 0.01
const_init_multi: 1.00
const_init_chi2: 1.00
max_msckf_plane: 20

sigma_plane_merge: 0.01 # sigma used when merging two CP planes
plane_merge_chi2: 0.75 # chi2 to reject bad merges
plane_merge_deg_max: 1.00 # max norm degree difference

plane_max_tri_side_px: 400 # max pixels a triangle edge can be
plane_max_norm_count: 12 # num tri norms to average
plane_max_norm_avg_max: 20.0 # max diff for norm average (degrees)
plane_max_norm_avg_var: 15.0 # max variance for norm average (degrees)
plane_max_norm_deg: 10.0 # pair-wise comparison
plane_max_dist_between_z: 0.05 # distance in vertical direction to plane:
plane_max_pairwise_px: 300 # max pixels pairwise comparison can be
plane_min_norms: 5 # min norms to do pair-wise comparison
plane_check_old_feats: true # update plane ids of features matched in previous frame

plane_filter_num_feat: 8 # we only perform spacial filtering if more than this feat count
plane_filter_z_thresh: 1.5 # z-test threshold (probably should be > 1.0) https://www.simplypsychology.org/z-table.html

plane_feat_min_obs: 2
plane_min_dist: 0.10
plane_max_dist: 20.0
plane_max_cond_number: 20000

plane_collect_init_feats: true # should we use extra MSCKF features in our plane init
plane_collect_msckf_feats: true # should we use long-MSCKF features in our plane init
plane_init_min_feat: 10 # min number of on-plane points required to init a plane
plane_init_max_cond: 50.0 # max condition number for plane fitting when init a plane
plane_msckf_min_feat: 8 # min number of features to use plane constraint (MSCKF update)
plane_msckf_max_cond: 50.0 # max condition number for plane fitting (MSCKF update)


# ==================================================================
# ==================================================================

init_window_time: 2.0 # how many seconds to collect initialization information
init_imu_thresh: 1.45 # threshold for variance of the accelerometer to detect a "jerk" in motion
init_max_disparity: 2.0 # max disparity to consider the platform stationary (dependent on resolution)
init_max_features: 75 # how many features to track during initialization (saves on computation)

init_dyn_use: false # if dynamic initialization should be used
init_dyn_mle_opt_calib: false # if we should optimize calibration during intialization (not recommended)
init_dyn_mle_max_iter: 50 # how many iterations the MLE refinement should use (zero to skip the MLE)
init_dyn_mle_max_time: 0.05 # how many seconds the MLE should be completed in
init_dyn_mle_max_threads: 6 # how many threads the MLE should use
init_dyn_num_pose: 6 # number of poses to use within our window time (evenly spaced)
init_dyn_min_deg: 10.0 # orientation change needed to try to init

init_dyn_inflation_ori: 10 # what to inflate the recovered q_GtoI covariance by
init_dyn_inflation_vel: 100 # what to inflate the recovered v_IinG covariance by
init_dyn_inflation_bg: 10 # what to inflate the recovered bias_g covariance by
init_dyn_inflation_ba: 100 # what to inflate the recovered bias_a covariance by
init_dyn_min_rec_cond: 1e-12 # reciprocal condition number thresh for info inversion

init_dyn_bias_g: [ 0.0, 0.0, 0.0 ] # initial gyroscope bias guess
init_dyn_bias_a: [ 0.0, 0.0, 0.0 ] # initial accelerometer bias guess

# ==================================================================
# ==================================================================

record_timing_information: false # if we want to record timing information of the method
record_timing_filepath: "/tmp/traj_timing.txt" # https://docs.openvins.com/eval-timing.html#eval-ov-timing-flame

record_plane_tracking_information: false  # if we want to record plane tracking information
record_plane_tracking_filepath: "/tmp/traj_tracking.txt"

# if we want to save the simulation state and its diagional covariance
# use this with rosrun ov_eval error_simulation
save_total_state: false
filepath_est: "/tmp/ov_estimate.txt"
filepath_std: "/tmp/ov_estimate_std.txt"
filepath_gt: "/tmp/ov_groundtruth.txt"

# ==================================================================
# ==================================================================

# our front-end feature tracking parameters
# we have a KLT and descriptor based (KLT is better implemented...)
use_klt: true # if true we will use KLT, otherwise use a ORB descriptor + robust matching
num_pts: 200 # number of points (per camera) we will extract and try to track
fast_threshold: 15 # threshold for fast extraction (warning: lower threshs can be expensive)
grid_x: 12 # extraction sub-grid count for horizontal direction (uniform tracking)
grid_y: 12 # extraction sub-grid count for vertical direction (uniform tracking)
min_px_dist: 15 # distance between features (features near each other provide less information)
knn_ratio: 0.70 # descriptor knn threshold for the top two descriptor matches
track_frequency: 21.0 # frequency we will perform feature tracking at (in frames per second / hertz)
downsample_cameras: false # will downsample image in half if true
num_opencv_threads: 4 # -1: auto, 0-1: serial, >1: number of threads
histogram_method: "HISTOGRAM" # NONE, HISTOGRAM, CLAHE

# aruco tag tracker for the system
# DICT_6X6_1000 from https://chev.me/arucogen/
use_aruco: false
num_aruco: 1024
downsize_aruco: true

# ==================================================================
# ==================================================================

# camera noises and chi-squared threshold multipliers
up_msckf_sigma_px: 1
up_msckf_chi2_multipler: 1
up_slam_sigma_px: 1
up_slam_chi2_multipler: 1
up_aruco_sigma_px: 1
up_aruco_chi2_multipler: 1

# masks for our images
use_mask: false

# imu and camera spacial-temporal
# imu config should also have the correct noise values
relative_config_imu: "kalibr_imu_chain.yaml"
relative_config_imucam: "kalibr_imucam_chain.yaml"



